// bot/src/bindings.rs
// Central location for all contract ABI bindings generated by abigen!.

#![allow(clippy::all)] // Disable clippy warnings for generated code

use ethers::prelude::abigen;

// Generate bindings and make the generated modules/structs public implicitly.
// If specific items need to be explicitly pub, that usually happens within the
// generated code itself or requires wrapper structs/functions.

abigen!(
    UniswapV3Pool,
    "./abis/UniswapV3Pool.json", // Assumes abis folder is at PROJECT_ROOT
    event_derives(serde::Deserialize, serde::Serialize)
);

abigen!(
    VelodromeV2Pool,
    "./abis/VelodromeV2Pool.json",
    event_derives(serde::Deserialize, serde::Serialize)
);

abigen!(
    VelodromeRouter,
    "./abis/VelodromeRouter.json",
    event_derives(serde::Deserialize, serde::Serialize)
);

abigen!(
    BalancerVault,
    "./abis/BalancerVault.json",
    event_derives(serde::Deserialize, serde::Serialize)
);

abigen!(
    QuoterV2,
    "./abis/QuoterV2.json",
    event_derives(serde::Deserialize, serde::Serialize)
);

abigen!(
    IERC20,
    r#"[
        function approve(address spender, uint256 amount) external returns (bool)
        function balanceOf(address account) external view returns (uint256)
        function decimals() external view returns (uint8)
    ]"#,
    event_derives(serde::Deserialize, serde::Serialize)
);

// Add binding for our executor contract
abigen!(
    ArbitrageExecutor,
    "./abis/ArbitrageExecutor.json", // Path to the new ABI file
    event_derives(serde::Deserialize, serde::Serialize)
);

// END OF FILE: bot/src/bindings.rs