// bot/src/bindings.rs
// bot/src/bindings.rs
#![allow(clippy::all)]
//! Contract bindings generated by `ethers::prelude::abigen`.

use ethers::prelude::abigen;

// --- Uniswap V3 ---
abigen!(
    UniswapV3Pool,
    "./abis/UniswapV3Pool.json",
    event_derives(serde::Deserialize, serde::Serialize)
);

abigen!(
    IUniswapV3Factory,
    "./abis/IUniswapV3Factory.json",
    event_derives(serde::Deserialize, serde::Serialize)
);

abigen!(
    QuoterV2,
    "./abis/QuoterV2.json",
    event_derives(serde::Deserialize, serde::Serialize)
);

abigen!(
    SwapRouter,
    "./abis/SwapRouter.json",
    event_derives(serde::Deserialize, serde::Serialize)
);


// --- Velodrome V2 (Optimism) ---
abigen!(
    VelodromeV2Pool,
    "./abis/VelodromeV2Pool.json",
    event_derives(serde::Deserialize, serde::Serialize)
);

abigen!(
    VelodromeRouter,
    "./abis/VelodromeRouter.json",
    event_derives(serde::Deserialize, serde::Serialize)
);

abigen!(
    IVelodromeFactory,
    "./abis/IVelodromeFactory.json",
    event_derives(serde::Deserialize, serde::Serialize)
);


// --- Aerodrome Finance (Base) - Reuse Velodrome ABIs ---
abigen!(
    AerodromePool,
    "./abis/VelodromeV2Pool.json",
    event_derives(serde::Deserialize, serde::Serialize)
);

abigen!(
    AerodromeRouter,
    "./abis/VelodromeRouter.json",
    event_derives(serde::Deserialize, serde::Serialize)
);

abigen!(
    IAerodromeFactory,
    "./abis/IVelodromeFactory.json",
    event_derives(serde::Deserialize, serde::Serialize)
);
// --- TODO: Add Bindings for Ramses (Arbitrum) when implementing ---


// --- Shared/Utility Contracts ---
abigen!(
    BalancerVault,
    "./abis/BalancerVault.json",
    event_derives(serde::Deserialize, serde::Serialize)
);

abigen!(
    IERC20,
    r#"[
        event Approval(address indexed owner, address indexed spender, uint256 value)
        event Transfer(address indexed from, address indexed to, uint256 value)
        function approve(address spender, uint256 amount) external returns (bool)
        function balanceOf(address account) external view returns (uint256)
        function decimals() external view returns (uint8)
        function symbol() external view returns (string)
        function name() external view returns (string)
        function totalSupply() external view returns (uint256)
        function allowance(address owner, address spender) external view returns (uint256)
        function transfer(address to, uint256 amount) external returns (bool)
        function transferFrom(address from, address to, uint256 amount) external returns (bool)
    ]"#,
    event_derives(serde::Deserialize, serde::Serialize)
);

abigen!(
    ArbitrageExecutor,
    "./abis/ArbitrageExecutor.json",
    event_derives(serde::Deserialize, serde::Serialize)
);

abigen!(
    IWETH9,
    r#"[
        function deposit() external payable
        function withdraw(uint256 wad) external
        function approve(address spender, uint256 amount) external returns (bool)
        function transfer(address to, uint256 value) external returns (bool)
        function balanceOf(address account) external view returns (uint256)
        function allowance(address owner, address spender) external view returns (uint256)
    ]"#,
    event_derives(serde::Deserialize, serde::Serialize)
);

// Added MinimalSwapEmitter binding
abigen!(
    MinimalSwapEmitter,
    "./abis/MinimalSwapEmitter.json",
    event_derives(serde::Deserialize, serde::Serialize)
);


// END OF FILE: bot/src/bindings.rs